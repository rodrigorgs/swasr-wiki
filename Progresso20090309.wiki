= Progresso =
== Redes complexas em software ==
O início do século XXI lançou alguma luz sobre essas questões. Baseados nas pesquisas pioneiras de Barabási e Albert sobre a estrutura da Web, alguns pesquisadores traçaram uma radiografia de programas de computador em vários níveis. Eles analisaram dependências estáticas entre estruturas de código-fonte \cite{Myers2003,Valverde2003,Moura2003,Serra2005,Baxter2006,Hyland-Wood2008,Li2008,Ichii2008,Louridas2008}, conexões entre objetos na execução de programas \cite{Potanin2005} ou mesmo dependências entre sistemas de software produzidos por equipes distintas \cite{Labelle2004,Louridas2008}. Sistemas orientados a objeto com tipificação estática são os mais estudados, mas também foram realizados experimentos com linguagens procedimentais \cite{Myers2003,Valverde2003} e em linguagens com tipicação dinâmica \cite{Marchesi2004,Concas2007}. Em todos os casos os mesmos padrões foram se repetindo, sistematicamente. Os estudos concluem que, em todos os casos, as redes analisadas pertencem à categoria das *redes livres de escala*.
É preciso neste momento fazer uma ressalva: nem todos os estudos que encontraram redes livres de escala no domínio de software se valeram de um tratamento estatístico rigoroso. Existem várias distribuições estatísticas que, quando plotadas na escala logarítmica produzem quase uma reta ou ainda que produzem uma reta em apenas uma região do gráfico \cite{Clauset2009}. Mas mesmo que algumas redes não possuam a distribuição em lei de potência, é possível tirar uma lição: em qualquer sistema baseado em software (suficientemente grande), existem entidades (sejam classes, objetos ou programas) que se relacionam com as outras muito mais do que a média.
== Estatística ==
"Power law distributions in empirical data"
A reta não é uma boa curva de regressão dos gráficos de distribuição de graus. O fato é que existem várias distribuições chamadas de cauda longa, cujo gráfico log-log é aproximadamente uma reta, e são caracterizadas pela presença de alguns elementos cujo valor está muito acima do valor médio. Essas distribuições incluem lei de potência (power law), lei de potência com cutoff exponencial, stretched exponential, double pareto e lognormal.
Na minha análise preliminar eu fiz regressão linear no gráfico de distribuição de graus usando o método dos mínimos quadrados a fim de estimar o expoente da distribuição e então calculei R² a fim de mostrar que a distribuição realmente se encaixava numa reta. Descobri que esse método assume que a distribuição possui certas características que não se aplicam à lei de potência. O mais indicado para estimar o expoente é usar o método de maximum likelihood estimation. E um valor alto de R² não quer dizer a melhor distribuição que se encaixa nos dados é a lei de potência, já que existem outras distribuições que poderiam fornecer R² igualmente alto ou maior.
Dificilmente todos os pontos vão se encaixar em uma distribuição, então normalmente as análises consideram apenas uma região do gráfico, por exemplo, o lado direito (a cauda). O teste estatístico goodness-of-fit ajuda a determinar a região que melhor se encaixa em uma distribuição.
A função de distribuição cumulativa complementar -- P(X >= x) -- é usada para reduzir os efeitos de pontos fora-da-curva (outliers) na análise. No caso de leis de potência, existe uma relação algébrica entre o coeficiente angular da reta da função cumulativa e o coeficiente da função não-cumulativa, P(X = x).
= Dúvidas =
== Escopo ==
Análise + modelagem de evolução?
Avaliação de recuperação de arquitetura traz o trabalho para um full circle.
== Comentários Externos ==